{
  "name": "node-storage",
  "version": "0.0.7",
  "description": "Simple key-value file based store for node.js",
  "main": "index.js",
  "scripts": {
    "test": "./node_modules/.bin/mocha -r should -R spec -t 1500"
  },
  "keywords": [
    "key-value",
    "store",
    "storage",
    "database",
    "datastore",
    "embedded"
  ],
  "author": {
    "name": "Antony Mativos",
    "email": "amativos@gmail.com"
  },
  "license": "MIT",
  "dependencies": {
    "mkdirp": "^0.5.0",
    "async": "^0.9.0"
  },
  "devDependencies": {
    "mocha": "^1.19.0",
    "rimraf": "^2.2.8",
    "should": "^3.3.2"
  },
  "readme": "node-storage\n============\n\nSimple file based store for node.js.\nUseful for storing configs and such on something like an embedded system.\n\n```\nnpm install node-storage\n```\n\nExamples:\n\n```js\nvar Storage = require('node-storage');\n\n// this will synchronously create storage file and any necessary directories\n// or just load an existing file\nvar store = new Storage('path/to/file');\n\n// persistence to disk is queued on every put()\nstore.put('hello', 'world');\n\n// storage object is kept in memory for quick access\nstore.get('hello'); // 'world'\n\n// for convenience, you can use dot notation for accessing objects when doing get/put\nstore.get('nested.value'); // undefined\n\n// here, 'nested' object is created, but only if it didn't previously exist,\n// in which case 'numbers' key is just added to the object\nstore.put('nested.numbers', [1, 2, 3]);\nstore.get('nested.numbers'); // [1, 2, 3]\n\n// throws 'nested.numbers is not an object' error\nstore.put('nested.numbers.primes', [7, 11, 13]);\n\nstore.put('nested.primes', [7, 11, 13]);\nstore.get('nested'); // { numbers: [1, 2, 3], primes: [7, 11, 13] }\n\nstore.put('deeply.nested', {object: {hello: 'world'}});\nstore.get('deeply.nested.object.hello'); // 'world'\nstore.get('deeply.nested').object.hello; // 'world'\n\n// remove also queues storage object to be persisted to disk\nstore.remove('deeply.nested.object');\nstore.get('deeply.nested.object.hello'); // undefined\nstore.get('deeply.nested.object'); // undefined\nstore.get('deeply.nested'); // {}\n```\n",
  "readmeFilename": "README.md",
  "_id": "node-storage@0.0.7",
  "dist": {
    "shasum": "f564b5b8e0ad2e1e5671a7f3e9e28cff5649f017"
  },
  "_from": "node-storage@",
  "_resolved": "https://registry.npmjs.org/node-storage/-/node-storage-0.0.7.tgz"
}
